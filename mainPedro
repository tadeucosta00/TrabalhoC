#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
#include <conio.h>
#include <locale.h>
#include <string.h>

struct registoMembro
{
	int ID_Equipa;
	char Nome[50];
    int contacto;
    int CC;
    char Morada[50];
    char CartaConducao[15];
    char AreaProfissional[50];
    char email[50];
	
};

void MenuSubmenuEquipas(struct registoMembro *membro);



int main(int argc, char *argv[])
{
	struct registoMembro membros[1000];
	
	MenuSubmenuEquipas(membros);
}


void MenuSubmenuEquipas(struct registoMembro *membro)
{  
	// variáveis case 1
    int opcao2, i = 0, contador  = 1;
    char carta, opcao;
    
    
    // variaveis case 2
    int identificador, k = 0, opcao3, opcao4, opcao5 ,j = 0, n = 0 ,contador1 = 1;
    
    
    while(contador)
	{
		system("cls");
		
    	printf("1-Inserir Elementos a Equipa\n");
    	printf("2-Verificar Membros de uma Equipa \n");
    	printf("3-Editar Membro de uma Equipa\n");
    	printf("0-Voltar ao menu Principal\n");
    	printf("Opção:");
        scanf(" %d", &opcao2);

        switch (opcao2)
        {
        
			case 1:
            	
				do
				{
					system("cls");
					
					puts("-----Inserir Elementos a Equipa-----\n");
					
					puts("Insira o ID da equipa a que pretende adicionar o membro:");
					scanf("%d", &membro[i].ID_Equipa);	
					
					printf("Nome do novo membro:\n");
            		scanf(" %s", &membro[i].Nome);
            		
            		printf("Área Profissional:");
            		scanf(" %s", &membro[i].AreaProfissional);
            		
            		printf("Contacto:");
           			scanf("%d", &membro[i].contacto);
           				
           			printf("Cartão de cidadão");
           			scanf("%d", &membro[i].CC);
           			
            		printf("Morada:");
            		scanf(" %s", &membro[i].Morada);
            		
            		printf("Email:");
            		scanf(" %s", &membro[i].email);
            		
            		puts("Possui Carta de ConduçãO:");
            		puts("\tSim---(s)\n \tNão---(n)");
            		scanf(" %c", &carta);
            	
					if(carta == 's' || carta == 'S')
					{
						puts("Insira o Numero da Carta de Condução");
						scanf(" %s", &membro[i].CartaConducao);
					}
					else if(carta == 'n' || carta == 'N')
					{
						membro[i].CartaConducao == "Não possui carta de condução";
					}
        			
        			
        			printf("Pretende Inserir mais algum Membro?");
        			printf("\n\tSim---(s)\n \tNão---(n)");
        			scanf("%s", &opcao);
        			
        			i++;
        			
        			system("cls");
        		
				}while(opcao == 'S' || opcao == 's');
				
				break;
				
            
        	case 2: 
			
					do
					{
						system("cls");
						
						printf("Insira a opção que deseja executar\n");
						printf("\n1-Verificar Elementos de Equipas");
						printf("\n0-Voltar ao Menu Anterior");
						printf("\n\nOpcao: ");
						scanf("%d", &opcao3);
						
						if(opcao3 == 1)
						{
							printf("Insira o ID da equipa\n");
		        			scanf("%d", &identificador);
		        		
		        			for(k = 0; k < i; k++)
							{
								if(membro[k].ID_Equipa == identificador)
								{
									printf("%d --- %s", k + 1 ,&membro[k].Nome);
								}
							}
							
							printf("\n\nPretende ver os dados relativos a que membro?");
							scanf("%d", &opcao4);
							
							for(j = 0; j < k; j ++)
							{
								if(membro[j].ID_Equipa = identificador)
								{
									n = opcao4 - 1;
									
									printf("\n\nO elemento %s, pertencente à Equipa com o ID %d, contém os seguintes dados: ", membro[n].Nome, identificador);	
				            		
				            		printf("\nArea Profissional: %s", &membro[n].AreaProfissional);
				            		
				           			printf("\nContacto: %d", &membro[n].contacto);
				           			
				           			printf("\nCartão de Cidadão: %d", &membro[n].CC);
				           			
				            		printf("\nMorada: %s", &membro[n].Morada);
				            		
				            		printf("\nEmail: %s", &membro[n].email);
				            		
				            		printf("\nCarta de Condução: %s", &membro[n].CartaConducao);
								}
							}
							
							printf("\n\nPressione 0 para voltar ao menu anterior: ");
							scanf("%d", &opcao5);
						}		

					}
					while(opcao3 != 0);
        		
				break;
				
       		 case 3:
        		/*puts("-----Eliminar Membro da equipa-----\n");
            	do
				{
					puts("Insira o ID da equipa:");
					//scanf(" %d", &id);
					puts("Nome membro:");
            		//printf("Estes são os membros da equipa %d:\n", id);
            		//struct com o nome dos membros
            	
            		puts("Insira o Nome de quem prentende remover");
            		//seguir a estrutura com o nome até encontrar o nome igual ao que foi
            		//inserido 
            		//tornar membro inativo
            	
        			puts("Pretende remover mais algum Membro?");
        			puts("\tSim---(s)\n \tNão---(n)");
        			scanf(" %c", &opcao);
        		
				}while(opcao == 'S' || opcao == 's');
				*/
				break;
				
        	case 0:
           		system("CLS");
		    	contador = 0;  
            	//MenuGestor();

        	default:
            	printf("Invalid choice.\n");
            	break;
     	}  
	 
	}
}
