#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
#include <conio.h>
#include <locale.h>
#include <string.h>

struct registoLar
{
	int ID_Lar;
	char Nome[50];
	char Regiao[50];
	char Morada[50];
	int Ativo;
};

void GerirLares (struct registoLar *lar, int id_lar);

int main(int argc, char *argv[])
{
	setlocale(LC_ALL, "Portuguese");
	
	struct registoLar lar[50];
	int id_lar = 0;
	
	GerirLares(lar, id_lar);
}

void GerirLares (struct registoLar *lar, int id_lar)
{
	int opcao;
	
	//case 1
	char adicionar_lares;
	
	//case 2
	int k, escolha_lar;
	char verificar_lares, verificar_mais;
	
	//case 3
	int id_editar, opcao_editar;
	char editar_lar, voltar_editar;
	
	//case 4
	int id_desactivar;
	char desactivar_lar, confirmar_desactivar, desactivar_mais;
	
	do
	{
		system("cls");
		printf("----- Gerir Lares -----");
		printf("\n\t1 -- Adicionar Lares");
		printf("\n\t2 -- Verificar Lares Existentes");
		printf("\n\t3 -- Editar Lares Existentes");
		printf("\n\t4 -- Desactivar Lares");
		printf("\nOpção: ");
		scanf("%d", &opcao);
		
		switch(opcao)
		{
			case 1:
				do
				{
					system("cls");
					printf("----- Adicionar Lares -----");
					
					lar[id_lar].ID_Lar = id_lar;
					
					printf("\n\nNome do lar: ");
					fflush(stdin);
        			gets(lar[id_lar].Nome);
        			
        			printf("\nRegião onde se encontra o Lar: ");
					fflush(stdin);
        			gets(lar[id_lar].Regiao);
        			
        			printf("\nMorada do Lar: ");
					fflush(stdin);
        			gets(lar[id_lar].Morada);
					
					lar[id_lar].Ativo = 1;
					id_lar ++;
					
					printf("\n\nPretende adicionar mais lares? (S/N)");
					scanf("%c", &adicionar_lares);
				}
				while((adicionar_lares == 's') || (adicionar_lares == 'S'));
				break;
				
			case 2:
				do
				{
					system("cls");
					printf("----- Verificar Lares -----");
					printf("\n\nLares Disponiveis: \n");
					
					for(k = 0; k < id_lar; k++)
					{
						printf("\n[%d] --- %s --- %s", lar[k].ID_Lar, lar[k].Nome, lar[k].Regiao);
					}
					
					printf("\n\nPretende visualizar os dados de algum dos Lares? (S/N): ");
					scanf(" %c", &verificar_lares);
					
					if((verificar_lares == 's') || (verificar_lares == 'S'))
					{
						printf("\nInsira o ID do Lar que pretende visualizar: ");
						scanf("%d", &escolha_lar);
						
						printf("\nNome: %s", lar[escolha_lar].Nome);
						
						printf("\nRegião: %s", lar[escolha_lar].Regiao);
						
						printf("\nMorada: %s", lar[escolha_lar].Morada);
						
						if(lar[escolha_lar].Ativo == 1)
						{
							printf("\nEste lar encontra-se: Ativo");
						}
						else if (lar[escolha_lar].Ativo == 0)
						{
							printf("\nEste lar encontra-se: Inativo");
						}
							
					}
					
					printf("\n\nPretende voltar a verificar os Lares? (S/N): ");
					scanf(" %c", &verificar_mais);
				}
				while((verificar_mais == 's') || (verificar_mais == 'S'));
				break;
			
			case 3:
				do
				{
					system("cls");
					printf("----- Editar Lares -----");
					printf("\n\nLares Disponiveis: \n");
					
					for(k = 0; k < id_lar; k++)
					{
						printf("\n[%d] --- %s --- %s", lar[k].ID_Lar, lar[k].Nome, lar[k].Regiao);
					}
					
					printf("\n\nPretende editar a informação de algum lar? (S/N): ");
					scanf(" %c", &editar_lar);
					
					if((editar_lar == 's') || (editar_lar == 'S'))
					{
						printf("\nInsira o ID do lar que pretende editar: ");
						scanf("%d", &id_editar);
						
						do
						{
							printf("\n\nInsira que campo pretende editar: ");
							printf("\n1 -- Nome");
							printf("\n2 -- Região");
							printf("\n3 -- Morada");
							printf("\n0 -- Sair");
							printf("\nOpcão: ");
							scanf("%d", &opcao_editar);
							
							switch(opcao_editar)
							{
								case 1:
									printf("\nNome do lar: ");
									fflush(stdin);
        							gets(lar[id_editar].Nome);
									break;
								case 2: 
									printf("\nRegião onde se encontra o Lar: ");
									fflush(stdin);
        							gets(lar[id_editar].Regiao);
									break;
								case 3:
									printf("\nMorada do Lar: ");
									fflush(stdin);
        							gets(lar[id_editar].Morada);
									break;
									
							}
						}
						while(opcao_editar != 0);
					}
					
					printf("Prentende voltar a editar algum lar? (S/N): ");
					scanf("%c", &voltar_editar);
					
				}
				while((voltar_editar == 's') || (voltar_editar == 'S'));
				break;
				
			case 4:
				do
				{
					system("cls");
					printf("----- Desactivar Lares -----");
					printf("\n\nLares Disponiveis: \n");
					
					for(k = 0; k < id_lar; k++)
					{
						printf("\n[%d] --- %s --- %s", lar[k].ID_Lar, lar[k].Nome, lar[k].Regiao);
					}
					
					printf("\n\nPretende desactivar algum lar? (S/N): ");
					scanf(" %c", &desactivar_lar);
					
					if((desactivar_lar == 's') || (desactivar_lar == 'S'))
					{
						printf("\n\nInsira o ID do lar que pretende desactivar: ");
						scanf("%d", &id_desactivar);
						
						printf("\n\nPretende mesmo desactivar este Lar? (S/N): ");
						scanf(" %c", &confirmar_desactivar);
						
						if((confirmar_desactivar == 's') || (confirmar_desactivar == 'S'))
						{
							lar[id_desactivar].Ativo = 0;
						}
						if((confirmar_desactivar == 'n') || (confirmar_desactivar == 'N'))
						{
							lar[id_desactivar].Ativo = 1;
						}
					}
					
					printf("\n\nPretende desactivar mais algum lar? (S/N): ");
					scanf(" %c", &desactivar_mais);
				}
				while((desactivar_mais == 's') || (desactivar_mais == 'S'));
				break;
		}
	}
	while(opcao != 0);
}
